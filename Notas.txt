instalar node
npx create-react-app . -->para crear el proyecto en la carpeta deseada


enf -->de snipets crea una funcion flecha

para desplegar github pages, netlify, firebase
npm start --> para iniciar local


con github pages

npm install gh-pages --save-dev

  "homepage": "https://NeeEveret.github.io/deploy1", a√±adir esto en packaje.json


"predeploy": "npm run build",		esto en scripts de json
"deploy": "gh-pages -d build"



subimos los archivos al github, manual o con

git inite
git remote add origin https://github.com/TU_USUARIO/TU_REPO.git
git branch -M main
git add .
git commit -m "primer commit"
git push -u origin main


luego 
npm run deploy		 si no funciona reinstala las dependencias con rm -rf node_modules package-lock.json

luego npm install y intentar npm run deploy


Instalar react-scripts manualmente por si no lo encuentra
npm install react-scripts --save
------------------------------------ actualizargga
üîÑ Flujo de actualizaci√≥n en GitHub Pages con React

Haces cambios en tu proyecto
Editas componentes, CSS, etc.

Guardas y haces commit en tu repo

git add .
git commit -m "actualizaci√≥n de componentes"
git push origin main


Esto actualiza tu rama main en GitHub.

Vuelves a hacer el deploy

npm run deploy


Esto genera una nueva build (npm run build) y actualiza la rama gh-pages.

Refrescas tu p√°gina publicada
Esperas unos segundos y tu sitio ya estar√° actualizado en:

https://TU_USUARIO.github.io/TU_REPO


‚ö° En resumen:

Push ‚Üí actualiza el c√≥digo en GitHub.

Deploy ‚Üí actualiza la p√°gina publicada en gh-pages.



----------------------update, se agrego el comando update en scripts de json para actualizar rapido
npm run update
Y har√° autom√°ticamente:

git add . ‚Üí agrega los cambios.

git commit -m "update" ‚Üí hace el commit con el mensaje "update".

git push origin main ‚Üí sube el c√≥digo a GitHub.

npm run deploy ‚Üí actualiza GitHub Pages.
